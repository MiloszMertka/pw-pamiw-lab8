@page "/equipment-options/edit/{id:long}"
@inject HttpClient HttpClient

<h1>Edit Equipment Option</h1>

@if (isFormSubmitted)
{
    <p>Form submitted successfully!</p>
}
else
{
    <form @onsubmit="SubmitForm">
    <div class="mb-3">
        <label class="form-label" for="name">Name</label>
        <input class="form-control" id="name" @bind="equipmentOptionForm.Name" type="text">
    </div>
    <div class="d-flex justify-content-end">
        <a class="btn btn-secondary" href="/equipment-options">Cancel</a>
        <button class="btn btn-primary ms-3" type="submit">Submit</button>
    </div>
</form>
}

@code {
    [Parameter]
    public long id { get; set; }

    private EquipmentOptionForm equipmentOptionForm = new EquipmentOptionForm();
    private bool isFormSubmitted = false;

    protected override async Task OnInitializedAsync()
    {
        var equipmentOption = await HttpClient.GetFromJsonAsync<EquipmentOption>($"api/equipment-options/{id}");
        equipmentOptionForm.Name = equipmentOption.Name;
    }

    private async Task SubmitForm()
    {
        var equipmentOption = new EquipmentOption(equipmentOptionForm.Name);
        equipmentOption.Id = id;
        await HttpClient.PutAsJsonAsync($"api/equipment-options/{id}", equipmentOption);
        isFormSubmitted = true;
    }
}
